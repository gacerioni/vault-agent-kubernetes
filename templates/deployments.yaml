{{- if .Values.env.config}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.name}}-config
data:
{{.Values.env.config | toYaml | indent 2}}
---
{{- end}}

{{- if .Values.env.secrets}}
apiVersion: v1
kind: Secret
metadata:
  name: {{.Values.name}}-approle-credentials
data:
{{.Values.env.secrets | toYaml | indent 2}}
---
{{- end}}

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: {{.Values.pvcsinkfilename}}
spec:
    accessModes:
      - ReadWriteOnce
    storageClassName: standard
    resources:
      requests:
        storage: 10Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.name}}-deployment
  labels:
    app: {{.Values.name}}
spec:
  replicas: {{int .Values.replicas}}
  selector:
    matchLabels:
      app: {{.Values.name}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
    spec:
      containers:
      - name: {{.Values.name}}-container
        image: {{.Values.image}}
        volumeMounts:
          - name: config-vol
            mountPath: /etc/vault/config
          - name: approle-credentials
            mountPath: /etc/vault/credentials
          - name: vault-agent-sink-shared
            mountPath: /etc/vault/sink_shared
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo hello; sleep 10;done"]
      volumes:
      - name: config-vol
        configMap:
          name: {{.Values.name}}-config
          items:
          - key: vault_agent_config
            path: vault_agent_config.hcl
          - key: test_vault_secrets
            path: test_roleid
      - name: approle-credentials
        secret:
          secretName: {{.Values.name}}-approle-credentials
      - name: vault-agent-sink-shared
        persistentVolumeClaim:
          claimName: {{.Values.pvcsinkfilename}}
